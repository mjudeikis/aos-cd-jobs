---
provision:
  os: "rhel"
  stage: "base"
  provider: "aws"
sync:
  - openshift,openshift-ansible=master
  - openshift,release=master
  #- Azure,acs-engine=master
parameters:
- name: "AZURE_VM_SIZE"
  default_value: "Standard_D2s_v3"
- name: "OPENSHIFT_RELEASE"
  default_value: "master"
- name: JOB_SPEC
  description: "JSON form of job specification."
- name: BUILD_ID
  description: "Unique build number for each run."
- name: REPO_OWNER
  description: "GitHub org that triggered the job."
  default_value: openshift
- name: REPO_NAME
  description: "GitHub repo that triggered the job."
  default_value: origin
- name: PULL_BASE_REF
  description: "Ref name of the base branch."
- name: PULL_BASE_SHA
  description: "Git SHA of the base branch."
- name: PULL_REFS
  description: "All refs to test."
- name: PULL_NUMBER
  description: "Pull request number."
- name: PULL_PULL_SHA
  description: "Pull request head SHA."
- name: JOB_SPEC
  description: "The job spec definition."
- name: PROW_JOB_ID
  description: "The ID that prow sets on a Jenkins job in order to correlate it with a ProwJob."
actions:
  - type: "forward_parameters"
    parameters:
      - JOB_SPEC
      - AZURE_VM_SIZE
      - OPENSHIFT_RELEASE

  - type: "host_script"
    title: "determine the resource group"
    script: |-
      echo "RESOURCE_GROUP=ci-$JOB_NAME-$BUILD_NUMBER" | ssh -F ./.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "cat >>/etc/environment"
      echo "IMAGE_NAME=rhel7-$OPENSHIFT_RELEASE-$(TZ=Etc/UTC date +%Y%m%d%H%M)" | ssh -F ./.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "cat >>/etc/environment"

  - type: "script"
    title: "build openshift installer image"
    repository: openshift-ansible
    script: |-
      docker build -f images/installer/Dockerfile -t openshift/origin-ansible:latest .

  - type: "host_script"
    title: "move secrets to remote host"
    script: |-
      # TODO: Remove token inject logic after GA
      set +x
      export KUBECONFIG=/var/lib/jenkins/.azure/kubeconfig
      AWS_REGISTRY_TOKEN=$(oc get secret aws-reg-token -n azure --template={{.data.token}} | base64 -d)
      if [[ -n $AWS_REGISTRY_TOKEN ]]; then
        echo "AWS_REGISTRY_TOKEN=$AWS_REGISTRY_TOKEN" | ssh -F ./.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "cat >>/etc/environment"
      fi
      set -x
      rsync --copy-links --omit-dir-times --archive --rsh "ssh -F ./.config/origin-ci-tool/inventory/.ssh_config" /var/lib/jenkins/.azure/* openshiftdevel:/data/src/github.com/openshift/release/cluster/test-deploy/azure/
      ssh -F ./.config/origin-ci-tool/inventory/.ssh_config openshiftdevel 'sudo chown -R origin:origin-git /data/src/github.com/openshift/release/cluster/test-deploy/azure/'
      ssh -F ./.config/origin-ci-tool/inventory/.ssh_config openshiftdevel 'sudo chmod -R ug+rwX /data/src/github.com/openshift/release/cluster/test-deploy/azure/'

  - type: "script"
    title: "build node image"
    repository: "release"
    script: |-
     # TODO: Remove token injection after GA (oreg_* vars)
     cd cluster/test-deploy/azure
      echo "Build parameters:"
      echo "openshift_azure_resource_group_name=$RESOURCE_GROUP"
      echo "openshift_azure_output_image_name=$IMAGE_NAME"
      set +x
      export OREG_URL='registry.reg-aws.openshift.com/openshift3/ose-${component}:${version}'
      TYPE=azure INSTANCE_PREFIX=unused ../../bin/ansible.sh ansible-playbook \
        -e "openshift_azure_resource_group_name=$RESOURCE_GROUP" \
        -e "openshift_azure_resource_location=eastus" \
        -e "openshift_azure_input_image_ns=images" \
        -e "openshift_azure_input_image_prefix=rhel7-base" \
        -e "openshift_azure_output_image_ns=images" \
        -e "openshift_azure_output_image_name=$IMAGE_NAME" \
        -e "openshift_azure_storage_account=openshiftimages" \
        -e "openshift_azure_storage_account_ns=images" \
        -e "openshift_azure_container=images" \
        -e "openshift_azure_vm_size=$AZURE_VM_SIZE" \
        -e "oreg_url=$OREG_URL" \
        -e "oreg_auth_user=unused" \
        -e "oreg_auth_password=$AWS_REGISTRY_TOKEN" \
        playbooks/azure/openshift-cluster/build_node_image.yml 
      set -x

  - type: "script"
    title: "tag node image as valid"
    repository: "release"
    script: |-
      cd cluster/test-deploy/azure
      TYPE=azure INSTANCE_PREFIX=unused ../../bin/ansible.sh ansible-playbook \
        -e "openshift_azure_resource_group_name=$RESOURCE_GROUP" \
        -e "openshift_azure_input_image_ns=images" \
        -e "openshift_azure_input_image_name=$IMAGE_NAME" \
        playbooks/azure/openshift-cluster/tag_image_as_valid.yml

post_actions:
  - type: "script"
    title: "clean up resources"
    repository: "release"
    script: |-
      cd cluster/test-deploy/azure
      TYPE=azure INSTANCE_PREFIX=unused ../../bin/ansible.sh ansible-playbook \
        -e "openshift_azure_resource_group_name=$RESOURCE_GROUP" \
        playbooks/azure/openshift-cluster/deprovision.yml

email:
- aos-azure@redhat.com
